// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ctre/Phoenix.h"


#include "Drive.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Drive::Drive() : frc::Subsystem("Drive") {
//    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
//    left1 = RobotMap::driveLeft1;
//    left2 = RobotMap::driveLeft2;
//    left3 = RobotMap::driveLeft3;
//    leftDriveGroup = RobotMap::driveLeftDriveGroup;
//    right1 = RobotMap::driveRight1;
//    right2 = RobotMap::driveRight2;
//    right3 = RobotMap::driveRight3;
//    rightDriveGroup = RobotMap::driveRightDriveGroup;
//    diffDrive = RobotMap::driveDiffDrive;
//    leftEncoder = RobotMap::driveLeftEncoder;
//    rightEncoder = RobotMap::driveRightEncoder;
//    shifter = RobotMap::driveShifter;
//
//    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
//    diffDrive.get()->SetDeadband(0.1);
}

void Drive::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void Drive::Periodic() {
    // Put code here to be run every loop

}


// Put methods for controlling this subsystem
// here. Call these from Commands.

void Drive::Arcade(double move, double rotate)
{
	//diffDrive.get()->ArcadeDrive(move, rotate);
}

