// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.



#include "TestCurve.h"
#include <iostream>
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

TestCurve::TestCurve(double timeout, double angle) : frc::TimedCommand(timeout) {
    // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	double numberOfCalls = (timeout * 1000) / 20;
	m_changeRate = angle / numberOfCalls;
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void TestCurve::Initialize() {
	Robot::drivePID->ZeroYaw();
	m_currentAngle = Robot::drivePID->GetYaw();
	//Robot::drivePID->SetSidePower(.3, .3);
}

// Called repeatedly when this Command is scheduled to run
void TestCurve::Execute() {

	std::cout << "Our current angle is " << Robot::drivePID->GetYaw() << " Our desired angle is " << m_currentAngle << std::endl;
}

// Called once after command times out
void TestCurve::End() {
	Robot::drivePID->SetSidePower(0, 0);
	Robot::drivePID->Disable();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void TestCurve::Interrupted() {

}
